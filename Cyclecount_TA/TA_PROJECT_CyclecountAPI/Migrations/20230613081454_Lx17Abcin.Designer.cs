// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TA_PROJECT_CyclecountAPI.DAL;

#nullable disable

namespace TA_PROJECT_CyclecountAPI.Migrations
{
    [DbContext(typeof(CyclecountContext))]
    [Migration("20230613081454_Lx17Abcin")]
    partial class Lx17Abcin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.LICC.LICC", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("ABCIN")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("AGEING_DAYS")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("IDATU")
                        .HasColumnType("nvarchar(48)");

                    b.Property<int?>("Idusin")
                        .HasColumnType("int");

                    b.Property<int?>("Idusup")
                        .HasColumnType("int");

                    b.Property<string>("LGNUM")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("LGPLA")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("LGTYP")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("LQNUM")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("MATNR")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NIDAT")
                        .HasColumnType("nvarchar(48)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("SALK3")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("TTEXT")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WERKS")
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime>("Ymd8in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ymd8up")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Idusin");

                    b.HasIndex("Idusup");

                    b.HasIndex("PlantId");

                    b.ToTable("LICC", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.Lx17", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abcin")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<double?>("Abwei")
                        .HasColumnType("float");

                    b.Property<string>("Altme")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Anzle")
                        .HasColumnType("float");

                    b.Property<string>("Ausbu")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bemer")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bestq")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bukrs")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bwkey")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Charg")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cntstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Cwert")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Dbgez")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Dwert")
                        .HasColumnType("float");

                    b.Property<bool>("FromLICC")
                        .HasColumnType("bit");

                    b.Property<double?>("Gesme")
                        .HasColumnType("float");

                    b.Property<string>("Idatu")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Idqua")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Idusin")
                        .HasColumnType("int");

                    b.Property<int?>("Idusup")
                        .HasColumnType("int");

                    b.Property<string>("Irnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Iseit")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Istat")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Ivnum")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Ivpos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Kreuz")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Kzinv")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lenum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Letyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Lgnum")
                        .HasColumnType("int");

                    b.Property<string>("Lgort")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lgpla")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lgtyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Linno")
                        .HasColumnType("int");

                    b.Property<string>("Lqnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lsonr")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lvorm")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Maktx")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Mandt")
                        .HasColumnType("int");

                    b.Property<string>("Matnr")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Meins")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Menga")
                        .HasColumnType("float");

                    b.Property<double?>("Menge")
                        .HasColumnType("float");

                    b.Property<string>("Nanum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Noval")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nvers")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Pagno")
                        .HasColumnType("int");

                    b.Property<int?>("Peinh")
                        .HasColumnType("int");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<string>("Plpos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Quinv")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Sobkz")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Sonum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Statustype")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<double?>("Stprs")
                        .HasColumnType("float");

                    b.Property<string>("Tanum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Tapos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Umren")
                        .HasColumnType("int");

                    b.Property<int?>("Umrez")
                        .HasColumnType("int");

                    b.Property<string>("Uname")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Verpr")
                        .HasColumnType("float");

                    b.Property<string>("Vfdat")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Vprsv")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Vzchn")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Waers")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Wdatu")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Werks")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Ymd8in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ymd8up")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Idusin");

                    b.HasIndex("Idusup");

                    b.HasIndex("PlantID");

                    b.ToTable("Lx17", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.Lx17Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abcin")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<double?>("Abwei")
                        .HasColumnType("float");

                    b.Property<string>("Altme")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Anzle")
                        .HasColumnType("float");

                    b.Property<string>("Ausbu")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bemer")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bestq")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bukrs")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Bwkey")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Charg")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cntstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Cwert")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Dbgez")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Dwert")
                        .HasColumnType("float");

                    b.Property<bool>("FromLICC")
                        .HasColumnType("bit");

                    b.Property<double?>("Gesme")
                        .HasColumnType("float");

                    b.Property<string>("Idatu")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Idqua")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Idusin")
                        .HasColumnType("int");

                    b.Property<int?>("Idusup")
                        .HasColumnType("int");

                    b.Property<string>("Irnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Iseit")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Istat")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Ivnum")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Ivpos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Kreuz")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Kzinv")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lenum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Letyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Lgnum")
                        .HasColumnType("int");

                    b.Property<string>("Lgort")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lgpla")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lgtyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Linno")
                        .HasColumnType("int");

                    b.Property<int?>("Logged_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Lqnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lsonr")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Lvorm")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Lx17Id")
                        .HasColumnType("int");

                    b.Property<string>("Maktx")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Mandt")
                        .HasColumnType("int");

                    b.Property<string>("Matnr")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Meins")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Menga")
                        .HasColumnType("float");

                    b.Property<double?>("Menge")
                        .HasColumnType("float");

                    b.Property<string>("Nanum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Noval")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nvers")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Pagno")
                        .HasColumnType("int");

                    b.Property<int?>("Peinh")
                        .HasColumnType("int");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<string>("Plpos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Quinv")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Sobkz")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Sonum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Statustype")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<double?>("Stprs")
                        .HasColumnType("float");

                    b.Property<string>("Tanum")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Tapos")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("Umren")
                        .HasColumnType("int");

                    b.Property<int?>("Umrez")
                        .HasColumnType("int");

                    b.Property<string>("Uname")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Verpr")
                        .HasColumnType("float");

                    b.Property<string>("Vfdat")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Vprsv")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Vzchn")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Waers")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Wdatu")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Werks")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Ymd8Log")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ymd8in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ymd8up")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Idusin");

                    b.HasIndex("Idusup");

                    b.HasIndex("Logged_UserId");

                    b.HasIndex("Lx17Id");

                    b.HasIndex("PlantID");

                    b.ToTable("Lx17Log", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.MatClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("abcin")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("fmr")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<int?>("idusin")
                        .HasColumnType("int");

                    b.Property<int?>("idusup")
                        .HasColumnType("int");

                    b.Property<string>("matnr")
                        .IsRequired()
                        .HasColumnType("Nvarchar(128)");

                    b.Property<DateTime>("ymd8in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ymd8up")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("PlantId");

                    b.HasIndex("idusin");

                    b.HasIndex("idusup");

                    b.ToTable("MatClass", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.MatPrice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("cur")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<int?>("idusin")
                        .HasColumnType("int");

                    b.Property<int?>("idusup")
                        .HasColumnType("int");

                    b.Property<string>("matdesc")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("matnr")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("mrpc")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("ms")
                        .HasColumnType("nvarchar(48)");

                    b.Property<double>("per")
                        .HasColumnType("float");

                    b.Property<string>("pgr")
                        .HasColumnType("nvarchar(48)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("uom")
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime>("ymd8in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ymd8up")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("PlantId");

                    b.HasIndex("idusin");

                    b.HasIndex("idusup");

                    b.ToTable("MatPrice", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Idusin")
                        .HasColumnType("int");

                    b.Property<int>("Idusup")
                        .HasColumnType("int");

                    b.Property<string>("LGNUM")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("Last_Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mltp")
                        .HasColumnType("int");

                    b.Property<string>("WERKS")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Depts", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.UserDeptModel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "DeptId");

                    b.HasIndex("DeptId");

                    b.ToTable("UserDept", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultDeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("Nvarchar(128)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SESAID")
                        .IsRequired()
                        .HasColumnType("Nvarchar(48)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("Nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultDeptId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.LICC.LICC", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("Idusin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("Idusup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsertedBy");

                    b.Navigation("Plant");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.Lx17", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("Idusin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Counter")
                        .WithMany()
                        .HasForeignKey("Idusup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counter");

                    b.Navigation("InsertedBy");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.Lx17Log", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("Idusin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Counter")
                        .WithMany()
                        .HasForeignKey("Idusup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Logged_User")
                        .WithMany()
                        .HasForeignKey("Logged_UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.Lx17.Lx17", "ReferencedLx17")
                        .WithMany()
                        .HasForeignKey("Lx17Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counter");

                    b.Navigation("InsertedBy");

                    b.Navigation("Logged_User");

                    b.Navigation("Plant");

                    b.Navigation("ReferencedLx17");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.MatClass", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Created_By")
                        .WithMany()
                        .HasForeignKey("idusin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Updated_By")
                        .WithMany()
                        .HasForeignKey("idusup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Created_By");

                    b.Navigation("Plant");

                    b.Navigation("Updated_By");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.Lx17.MatPrice", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Created_By")
                        .WithMany()
                        .HasForeignKey("idusin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "Updated_By")
                        .WithMany()
                        .HasForeignKey("idusup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Created_By");

                    b.Navigation("Plant");

                    b.Navigation("Updated_By");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.UserDeptModel", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "Dept")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.UserModel", "User")
                        .WithMany("Depts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.UserModel", b =>
                {
                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.DeptModel", "DefaultDept")
                        .WithMany()
                        .HasForeignKey("DefaultDeptId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TA_PROJECT_CyclecountAPI.Model.User.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DefaultDept");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TA_PROJECT_CyclecountAPI.Model.User.UserModel", b =>
                {
                    b.Navigation("Depts");
                });
#pragma warning restore 612, 618
        }
    }
}
